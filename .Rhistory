axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=10),
axis.title.x = element_text(color = axisLabelColor, size=10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
plot1 <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
plot3 <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
plot5 <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
plot1, plot3, plot5, nrow = 3
)
figure
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1000, height = 1000)
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=10),
axis.title.x = element_text(color = axisLabelColor, size=10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
plot1 <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
plot3 <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
plot5 <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
plot1, plot3, plot5, nrow = 3
)
figure
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
plot1 <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
plot3 <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
plot5 <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
plot1, plot3, plot5, nrow = 3
)
figure
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
plot1 <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
plot3 <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
plot5 <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
plot1, plot3, plot5, nrow = 3
)
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
plot1 <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
plot3 <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
plot5 <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
plot1, plot3, plot5, nrow = 3
)
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
figure
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
plot1 <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
plot3 <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
plot5 <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
plot1, plot2, plot3, plot5, nrow = 4
)
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
figure
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
plot1 <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
plot3 <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
plot5 <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
plot1, plot2, plot3, plot4, plot5, nrow = 5
)
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
figure
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
cpu_user_plot <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
cpu_nice_plot <- drawPlot("CPU Nice", "CPU-Verbrauch (%)", measurements$cpu_nice, measurements$time)
cpu_system_plot <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
cpu_wait_plot <- drawPlot("CPU Wait", "CPU-Verbrauch (%)", measurements$cpu_wait, measurements$time)
cpu_idle_plot <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
cpu_user_plot, cpu_nice_plot, cpu_system_plot, cpu_wait_plot, cpu_idle_plot, nrow = 5
)
figure <- annotate_figure(figure)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
figure
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
cpu_user_plot <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
cpu_nice_plot <- drawPlot("CPU Nice", "CPU-Verbrauch (%)", measurements$cpu_nice, measurements$time)
cpu_system_plot <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
cpu_wait_plot <- drawPlot("CPU Wait", "CPU-Verbrauch (%)", measurements$cpu_wait, measurements$time)
cpu_idle_plot <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
cpu_user_plot, cpu_nice_plot, cpu_system_plot, cpu_wait_plot, cpu_idle_plot, nrow = 5
)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
figure
# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(hms)
library(gridExtra)
# Path
base_path <- "C:/Users/kreut/OneDrive/Uni/Bachelor-Thesis/Quellcode/CSV-Analyser/"
# Colors
axisLabelColor <- "#69b3a2"
yAxisColor <- "black"
# Import CSV from Collectl
data_csv <- read.csv("collectl_text.txt", na="NA")
# Put measurements into dataframe
measurements <- data.frame(
time=data_csv[[2]],
cpu_user=data_csv[[3]],
cpu_nice=data_csv[[4]],
cpu_system=data_csv[[5]],
cpu_wait=data_csv[[6]],
cpu_idle=data_csv[[15]]
)
# function to draw line plots
drawPlot <- function(title, yAxisLabel, measurement, time) {
ggplot(measurements, aes(x=time, y=measurement, group=1)) +
geom_line() +
scale_y_continuous(
name = yAxisLabel,
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = axisLabelColor, size=15),
axis.title.x = element_text(color = axisLabelColor, size=15),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "none",
) +
ggtitle(title)
}
# call drawPlot function for each plot
cpu_user_plot <- drawPlot("CPU User", "CPU-Verbrauch (%)", measurements$cpu_user, measurements$time)
cpu_nice_plot <- drawPlot("CPU Nice", "CPU-Verbrauch (%)", measurements$cpu_nice, measurements$time)
cpu_system_plot <- drawPlot("CPU System", "CPU-Verbrauch (%)", measurements$cpu_system, measurements$time)
cpu_wait_plot <- drawPlot("CPU Wait", "CPU-Verbrauch (%)", measurements$cpu_wait, measurements$time)
cpu_idle_plot <- drawPlot("CPU Idle", "CPU-Verbrauch (%)", measurements$cpu_idle, measurements$time)
# Build figures with multiple plots
figure <- ggarrange(
cpu_user_plot, cpu_nice_plot, cpu_system_plot, cpu_wait_plot, cpu_idle_plot, nrow = 5
)
ggexport(figure, filename = "figure.png", width = 1920, height = 1080)
figure
